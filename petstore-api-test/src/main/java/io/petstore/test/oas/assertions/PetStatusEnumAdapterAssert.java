package io.petstore.test.oas.assertions;

import io.petstore.test.oas.client.model.Pet;

/**
 * {@link Pet.StatusEnum.Adapter} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractPetStatusEnumAdapterAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class PetStatusEnumAdapterAssert extends AbstractPetStatusEnumAdapterAssert<PetStatusEnumAdapterAssert, Pet.StatusEnum.Adapter> {

  /**
   * Creates a new <code>{@link PetStatusEnumAdapterAssert}</code> to make assertions on actual Pet.StatusEnum.Adapter.
   * @param actual the Pet.StatusEnum.Adapter we want to make assertions on.
   */
  public PetStatusEnumAdapterAssert(Pet.StatusEnum.Adapter actual) {
    super(actual, PetStatusEnumAdapterAssert.class);
  }

  /**
   * An entry point for PetStatusEnumAdapterAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPet.StatusEnum.Adapter)</code> and get specific assertion with code completion.
   * @param actual the Pet.StatusEnum.Adapter we want to make assertions on.
   * @return a new <code>{@link PetStatusEnumAdapterAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static PetStatusEnumAdapterAssert assertThat(Pet.StatusEnum.Adapter actual) {
    return new PetStatusEnumAdapterAssert(actual);
  }
}
